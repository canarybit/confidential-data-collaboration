#!/usr/bin/env bash
# postrm script for sgx-dcap-pccs
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    remove)
        if [ -d @pkg_path@ ]
        then
            pushd @pkg_path@ &> /dev/null
            rm -rf node_modules || true
            popd &> /dev/null
        fi

        #Remove PCCS system service
        echo -n "Uninstalling PCCS service ..."
        if [ -d /run/systemd/system ]; then
            PCCS_NAME=pccs.service
            if [ -d /lib/systemd/system ]; then
                PCCS_DEST=/lib/systemd/system/$PCCS_NAME
            else
                PCCS_DEST=/usr/lib/systemd/system/$PCCS_NAME
            fi
            systemctl stop pccs || true
            systemctl disable pccs || true
            rm $PCCS_DEST || true
            systemctl daemon-reload
        elif [ -d /etc/init/ ]; then
            PCCS_NAME=pccs.service
            PCCS_DEST=/etc/init/$PCCS_NAME
            rm $PCCS_DEST || true
            /sbin/initctl reload-configuration
        fi
        echo "finished."
    ;;

    purge|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
